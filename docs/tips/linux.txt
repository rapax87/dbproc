linux									
显示相应文件名									
find ~/ubp_view -name "*.sql" -exec grep -H UbpAlarm {} \;									
find ~/ubp_view -name "*.sql" -exec grep -H mysql_query {} \;									
									
									
b cm_msg_commands.cpp:33									
									
TestCM_REQ 4 10.121.87.8:ubp_cm_agent									
									
									
解压bz2									
tar -xjf valgrind-3.8.1.tar.bz2									
									
编译cm_ftp时缺少头文件io.h									
sudo cp /usr/local/glibc-2.16.0/include/sys/io.h /usr/include/io.h									
sudo cp /usr/src/linux-3.0.13-0.27/fs/nilfs2/direct.h /usr/include/direct.h									
									
linux									
ftplib.h:64:25: 错误：openssl/ssl.h：没有那个文件或目录									
解决：sudo cp -R /usr/local/ssl/include/openssl /usr/include/									
									
netstat -anp | grep 8080									
									
									
^[0-9]{1,}.									
									
valgrind --log-file=/home/xwx43908/val.log cm_agent									
									
 valgrind --log-file=/home/xwx43908/val.log --leak-check=full cm_agent									
 valgrind --xml=yes --xml-file=/home/xwx43908/cm_val.xml --leak-check=full cm_agent									
									
									
script -t 2>timing									
…									
exit									
scriptreplay timing									
									
ls -lahrt /etc									
									
									
清除Cache									
make clean									
rm CMakeCache.txt									
gcc_cmake									
make install									
									
									
									
读取Core									
file core.763>coreinfo									
core.763: ELF 64-bit LSB core file x86-64, version 1 (SYSV), SVR4-style, from 'cm_agent'									
gdb cm_agent core.763 2>&1 | tee ./gdb.txt									
									
									
									
find . -name "*.cpp" -exec grep -H GroupUser {} >> findGroupUser.txt \;									
find . -name "*.h" -exec grep -H GroupUser {} >> findGroupUser.txt \;									
									
									
find . -name "core.*" -type f									
									
									
perror 13									
									
find -regex ".*\.\(xls\|csv\)" 									
									
									
ssh -keygen -t rsa									
 scp /home/xwx43908/.ssh/id_rsa.pub xwx43908@10.121.87.10:.ssh/authorized_keys									互信的建立过程_服务器应用_Linux公社-Linux系统门户网站.htm此处覆盖id_rsa.pub再改名方式不妥
 scp /home/xwx43908/.ssh/id_rsa.pub xwx43908@10.121.87.8:.ssh/authorized_keys									
									
scp /home/svnbak/WN_eUBP_CODE_VOB-incremental_backup3214-3285.20130327-00:30:01.gz xwx43908@10.121.87.10:/home/svnbak/WN_eUBP_CODE_VOB-incremental_backup3214-3285.20130327-00:30:01.gz									
find . -name "*.gz" -exec scp {} xwx43908@10.121.87.10:/home/svnbak \;									
									
									
 scp /root/.ssh/id_rsa.pub root@30.30.30.85:.ssh/authorized_keys									
 scp /root/.ssh/id_rsa.pub root@30.30.30.155:.ssh/authorized_keys									
									
#include "platform/modules/frame/module_base.hpp"									
#include "platform/modules/svcmgr/ubp_svc_mgr.hpp"									
									
using namespace ubp::platform::svcmgr;									
using namespace ubp::platform::frame;									
/*									
	ServiceMgr *svc_mgr_;								
	svc_mgr_ = ModuleRef<ServiceMgr>();								
	ServiceInfo svcinfo;								
	int ret = svc_mgr_->GetCurrentServiceInfo(svcinfo);								
	std::string localSvcKey_ = svcinfo.GetServiceKey();								
	CM_TRACE_DEBUG("localSvcKey="<<localSvcKey_);								
	*/								
									
									
Breakpoint 4, CmAgentImpl::Init (this=0x7fffffffd350) at /home/xwx43908/ubp_view/WN_eUBP_CODE_VOB/code/src/platform/cm/cm_agent.cpp:116									
116             IMessageContext *pMQCntx=ServiceEnv_T::instance()->GetModule<IMessageContext>();									
(gdb) n									
[New Thread 0x7fffc77ce700 (LWP 5660)]									
ForkNewThread success									
Thread 7fffc77ce700 started,thread count[2]									
117             pMQCntx->RegMsgReponser(myhandler, MSG_PACKAGE_CM);									
(gdb) p pMQCntx									
$1 = (ubp::platform::mq::IMessageContext *) 0x0									
									
									
									
file core.11762|awk -F\' '{print $2}'|awk '{print $1}'									
									
xwx43908@ubp-one:~/ubp_view/WN_eUBP_CODE_VOB/build/ide/gcc/src/platform/cm> file core.1254									
core.1254: ELF 64-bit LSB core file x86-64, version 1 (SYSV), SVR4-style, from 'orm/cm/cm_agent'									
file core.1254|awk -F\' '{print $2}'|awk '{print $1}'|awk -F/ '{print $NF}'									
									
									
									
gdb									
call a.assign("ok")									
									
									
xwx43908@ubp-one:~/tmpsvn> uname -a									
Linux ubp-one 3.0.13-0.27-default #1 SMP Wed Feb 15 13:33:49 UTC 2012 (d73692b) x86_64 x86_64 x86_64 GNU/Linux									
									
									
cat << EOF > filename									
…									
EOF									
									
图形界面									
dialog  --backtitle  "The  first  dialog  box "  --title  "hello"  --yesno  "Is this  your  first dialog box?"  7 25									
dialog    --title   Testing   --msgbox  " This   is  a test " 10  20									
dialog --title "Input your name"  --inputbox "Please input your name:" 10 30  2> /tmp/name.txt									
									
dialog  --title  "Pick one file"  --fselect /root/  7  40									
dialog  --title  "Pick one file"  --fselect /home/xwx43908/  7  40									
									
									
netstat -pan									
									
									
. svc_profile.sh									
									
									
									
ntp									
sudo sh -x ./ubp_ntp_update.sh 10.121.87.10									
"#设置ntpd服务

vi /etc/ntp.conf

方法同上，但注意将设置的上级ntp server 设置为服务器的地址。

server 192.168.1.101 prefer

#设置开启服务后自动同步上级ntp server时间

vi /etc/ntp/step-tickers   加入一条

192.168.1.101

重启ntpd服务。

[root@test ~]# service ntpd restart"									
									
									
弹出第一光驱 eject									
装入第一光驱 eject -t									
弹出第二光驱 eject /dev/cdrom1									
装入第二光驱 eject /dev/cdrom1 -t									
									
									
									
kill `ps -ef|grep ubp_svcd|grep -v grep|awk '{print $2}'`									
ifconfig em3 up									
									
#查看进程占用端口									
ubp-one:~ # ps -ef|grep ubp_cm									
root      7405  7357  0 08:54 pts/26   00:00:00 grep ubp_cm									
xwx43908 24459 12766  0 Aug21 pts/16   00:00:00 vi /opt/UBP/logs/ubp_cm.log									
root     24946 24909  0 06:51 ?        00:00:01 ubp_svcd -name ubp_cm -type cm_agent									
ubp-one:~ # netstat -antp |grep 24946									
tcp        0      0 10.121.87.8:20004       0.0.0.0:*               LISTEN      24946/ubp_svcd									
									
									
									
									
1.添加虚拟ip 									
ifconfig em1:1 192.168.1.88 netmask 255.255.255.0									
ifconfig eth0:1 30.30.30.100 netmask 255.255.255.0									
2. 删除刚才添加的虚拟IP  									
ip addr del 192.168.1.88/24 dev em1									
									
									
									
ubp_adm -cmd stopsvc ubp_lic_man									
									
ubp-one:/home/xwx43908/ubp_view/WN_eUBP_CODE_VOB/code/install/scripts/collection # ./ubp_collect.sh all /tmp/collect									
									
									
									
echo ubp_cm_20130925174513_20130926184940.log.tar.gz|cut -d_ -f 4|cut -d. -f 1									
if [ `date '+%Y%m%d%H%M%S'` -gt `echo ubp_cm_20130925174513_20130926184940.log.tar.gz|cut -d_ -f 4|cut -d. -f 1` ];then echo large; fi									
date '+%Y%m%d%H%M%S' -d'-3 day'	3天前日期								
if [ `date '+%Y%m%d%H%M%S' -d'-3 day'` -le `echo ubp_cm_20130925174513_20131008184940.log.tar.gz|cut -d_ -f 4|cut -d. -f 1` ];then echo collect; fi									
if [ `date '+%Y%m%d%H%M%S' -d'-$before_days day'` -le `echo ubp_cm_20130925174513_20131008184940.log.tar.gz|cut -d_ -f 4|cut -d. -f 1` ];then echo collect; fi									
									
									
比如网卡是em3									
									
1）静态方法：									
/etc/sysconfig/network下有个文件									
ifcfg-em3里面有对这个网卡的配置，包括IP地址									
									
如果要给em3绑定另一个IP									
则在/etc/sysconfig/network（ifcfg-em3所在目录）下新建一个文件									
ifcfg-em3:0									
在此文件中进行IP地址等参数的配置									
									
以此类推，如果再绑一个则新建一个ifcfg-em3:1等									
									
2）动态方法（重启失效）：									
ifconfig em3:1 <IP地址> netmask <子网掩码>									
									
									
ubp-one:~ # echo -n "hello" | base64            									
aGVsbG8=									
ubp-one:~ # echo -n "123456" | base64     									
MTIzNDU2									
ubp-one:~ # echo -n "MTIzNDU2"|base64 -d									
123456ubp-one:~ # 									
									
gpg --gen-key									
gpg --gen-key --homedir /mygnupg									
gpg -r xubingbing -a --encrypt message.txt									
gpg -r xubingbing -a --decrypt message2.txt.asc									
									
$ gpg -c myfinancial.info									
$ gpg myfinancial.info.gpg									
									
									
ls -lrt #按时间排序，最新放最后									
ls -lSr /home/svnbak #按大小从小到大									
									
									
Display list of last reboot entries: last reboot | less									
									
Display list of last shutdown entries: last -x | less									
									
or more precisely: last -x | grep shutdown | less									
									
for((i=1;i<=10;i++));do ./ubp_collect.sh all /tmp/collect & done									
									
搜索/etc/passwd中以xwx开头，而后面还存在xwx的行									
grep --color -E "^(xwx).*\1" /etc/passwd									
									
suse防火墙									
ubp-one:/opt/UBP/bin # SuSEfirewall2 stop									
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory									
SuSEfirewall2: batch committing...									
SuSEfirewall2: Firewall rules unloaded.									
									
chkconfig --level 2345 SuSEfirewall2_setup off									
chkconfig --level 2345 SuSEfirewall2_init off									
									
if [[ "$newip" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]];then									
    ....									
fi									
									
									
									
IFS=","									
arr=($a)									
echo ${arr[@]}									
echo ${arr[1]}									
echo ${#arr[*]}									
									
修改主机名									
/etc/HOSTNAME									
/etc/rc.d/boot.localnet start									
									
网卡与ip对应									
ifconfig | sed -n '/^\w/{N;s/\(\w*\).*r:\([^ ]*\).*/\1 \2/p}'									
ifconfig | sed -n '/^\w/{N;s/\([^ ]*\).*addr:\([^ ]*\).*/\1 \2/p}'									
									
ip addr del 192.168.1.88/24 dev em1									
									
									
grep -E -n "<table_data|</table_data" input/input.xml									
awk '/<table_data/{while(getline)if($0!~/</table_data/)print;else print;exit}'									
									
grep -E -n "<table_data" input/input.xml|awk -F: '{print $1}'									
grep -E -n "</table_data>" input/input.xml|awk -F: '{print $1}'									
grep -E -n "<table_data" input/input.xml|awk -F\" '{print $2}'									
									
tables=(`grep -E -n "<table_data" input/input.xml|awk -F\" '{print $2}'`)									
echo ${tables[@]}									
TBL_PTTUser TBL_Groups TBL_GroupPTTUser									
									
echo ${#tables[@]}									
3									
									
begins=(`grep -E -n "<table_data" input/input.xml|awk -F: '{print $1}'`)									
ends=(`grep -E -n "</table_data>" input/input.xml|awk -F: '{print $1}'`)									
									
sed -n '4,11055p' input/input.xml>a.xml									
									
INSTALL(DIRECTORY conf DESTINATION bin/veritas/ PATTERN ".svn" EXCLUDE)									
									
echo "* * * * * /opt/UBP/bin/monitor_3rd_svcs.sh" >> /var/spool/cron/tabs/root									
/etc/init.d/cron reload									
/etc/init.d/cron restart									
									
判断配置项表依赖									
cd /opt/UBP/conf/cm_service/									
grep -H "FK:" *.xml|sed -r 's/^(.*)\.xml.*FK:([^"]*)" [^\^].*/\1:\2/'|awk -F: '{print "TBL_"$1"<TBL_"$3}'									
grep -H "FK:" /opt/UBP/conf/cm_service/*.xml|sed -r 's/^.*\/([^/]*)\.xml.*FK:([^"]*)" [^\^].*/\1:\2/'|awk -F: '{print "TBL_"$1"<TBL_"$3}'									
									
									
									
find /home/svnbak -name "*.gz" -mtime +30 -exec rm -rf {} \;									
									
svn status $EASY_CODE_VOB/code |grep -E '(hpp|cpp)'

一、如何得知自己正在使用的linux是什么版本呢，下面的几种方法将给你带来答案！

　　1. 查看内核版本命令：

　　1) [root@q1test01 ~]# cat /proc/version

　　 Linux version 2.6.9-22.ELsmp (bhcompile@crowe.devel.redhat.com) (gcc version 3.4.4 20050721 (Red Hat 3.4.4-2)) #1 SMP Mon Sep 19 18:00:54 EDT 2005

　　2) [root@q1test01 ~]# uname -a

　　Linux q1test01 2.6.9-22.ELsmp #1 SMP Mon Sep 19 18:00:54 EDT 2005 x86_64 x86_64 x86_64 GNU/Linux

　　3) [root@q1test01 ~]# uname -r

　　2.6.9-22.ELsmp

　　2. 查看linux版本：

　　1) 登录到服务器执行 lsb_release -a ,即可列出所有版本信息,例如:

　　[root@3.5.5Biz-46 ~]# [root@q1test01 ~]# lsb_release -a

　　LSB Version: :core-3.0-amd64:core-3.0-ia32:core-3.0-noarch:graphics-3.0-amd64:graphics-3.0-

　　ia32:graphics-3.0-noarch

　　Distributor ID: RedHatEnterpriseAS

　　Description: Red Hat Enterprise Linux AS release 4 (Nahant Update 2)

　　Release: 4

　　Codename: NahantUpdate2

　　注:这个命令适用于所有的linux，包括Redhat、SuSE、Debian等发行版。

　　2) 登录到linux执行cat /etc/issue,例如如下:

　　[root@q1test01 ~]# cat /etc/issue

　　Red Hat Enterprise Linux AS release 4 (Nahant Update 2)

　　Kernel \r on an \m

　　3) 登录到linux执行cat /etc/redhat-release ,例如如下:

　　[root@q1test01 ~]# cat /etc/redhat-release

　　Red Hat Enterprise Linux AS release 4 (Nahant Update 2)

　　注:这种方式下可以直接看到具体的版本号，比如 AS4 Update 1

　　4)登录到linux执行rpm -q redhat-release ,例如如下:

　　[root@q1test01 ~]# rpm -q redhat-release

　　redhat-release-4AS-3

　　注:这种方式下可看到一个所谓的release号，比如上边的例子是3

　　这个release号和实际的版本之间存在一定的对应关系，如下：

　　redhat-release-3AS-1 -> Redhat Enterprise Linux AS 3

　　redhat-release-3AS-7.4 -> Redhat Enterprise Linux AS 3 Update 4

　　redhat-release-4AS-2 -> Redhat Enterprise Linux AS 4

　　redhat-release-4AS-2.4 -> Redhat Enterprise Linux AS 4 Update 1

　　redhat-release-4AS-3 -> Redhat Enterprise Linux AS 4 Update 2

　　redhat-release-4AS-4.1 -> Redhat Enterprise Linux AS 4 Update 3

　　redhat-release-4AS-5.5 -> Redhat Enterprise Linux AS 4 Update 4

　　另:第3)、4)两种方法只对Redhat Linux有效。



二、如何查看LINUX是多少位 

1. 查看linux机器是32位还是64位的方法：

file /sbin/init 或者file /bin/ls
/sbin/init: ELF64-bitLSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.18, stripped

如果显示 64-bit 则为64位；

file /sbin/init
/sbin/init: ELF32-bitLSB executable, Intel 80386, version 1 (SYSV), for GNU/Linux 2.2.5, dynamically linked (uses shared libs), stripped

如果显示为32 bit 则为32bit；

uname -a:
uname -a
Linux pmx002**.**.**  2.6.32-71.el6.x86_64 #1 SMP Wed Sep 1 01:33:01 EDT 2010x86_64x86_64 x86_64 GNU/Linux

x86_64表示64位机器

uname -a
Linux pmx0**.**.**    2.6.9-5.ELsmp #1 SMP Wed Jan 5 19:30:39 EST 2005i686i686 i386 GNU/Linux



i686表示32位机器

i686 只是i386的一个子集,支持的cpu从Pentium 2 (686)开始,之前的型号不支持.

备注：

1. i386 适用于intel和AMD所有32位的cpu.以及via采用X86架构的32的cpu.

intel平台包括8086,80286,80386,80486,奔腾系列(1.2.3.4)、赛扬系列,Pentium D系列

    以及centrino P-M,core duo 等.

2. X86_64 适用于intel的Core 2 Duo, Centrino Core 2 Duo, and Xeon 和AMD Athlon64/x2, Sempron64/x2, Duron64等采用X86架构的64位cpu.

3. PPC   适用于Apple Macintosh G3, G4, G5, PowerBook, and other non-Intel models

安装DVD包括的软件要比安装光盘多一些,安装DVD也包括了两种图形界面(KDE和gnome).

4.Jigdo

也可以通过 Jigdo 下载 Fedora 发行版。Jigdo 可以加速下载安装盘的 ISO 镜像。同 BT 下载等待任务完全完成所不同，Jidgo 自动定位最快的镜像服务器(通过 Fedora 镜像管理器)，并且从中下载所需要的文件。为了减少所需的网络流量，可以让 Jigdo 扫描现存的 DVD 或 CD 介质。这个功能对于以下用户特别有用。 

2. getconf LONG_BIT
在32位和64位机器上运行如下命令，结果如下：
[b@002 ~]$ getconf LONG_BIT
64

[root@pmx4 /]# getconf LONG_BIT
32

									
set -o vi									
									
了解如何对文本文件做交集、并集和差集：									
									
1. cat a b | sort | uniq > c # c is a union b  									
2. cat a b | sort | uniq -d > c # c is a intersect b  									
3. cat a b b | sort | uniq -u > c # c is set difference a – b 									
